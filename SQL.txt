CREATE DATABASE TIENDA_DE_ROPA;

CREATE USER 'tdr'@'localhost' IDENTIFIED BY 'tdrFenixoft';

GRANT ALL ON TIENDA_DE_ROPA.* TO 'tdr'@'localhost';

USE TIENDA_DE_ROPA;

CREATE TABLE TIPOS_INGRESOS(
	TIPO VARCHAR(50) NOT NULL,
	PRIMARY KEY(TIPO)
	);

CREATE TABLE TIPOS_EGRESOS(
	TIPO VARCHAR(50) NOT NULL,
	PRIMARY KEY(TIPO)
	);

CREATE TABLE FORMAS_DE_PAGO(
	NOMBRE VARCHAR(30) NOT NULL,
	PRIMARY KEY(NOMBRE)
	);	
	
CREATE TABLE APERTURAS_DE_CAJA(
	FECHA DATE NOT NULL,
	MONTO FLOAT NOT NULL,
	PRIMARY KEY(FECHA)
	);

CREATE TABLE CATEGORIAS(
	ID INT AUTO_INCREMENT NOT NULL,
	NOMBRE VARCHAR(255) NOT NULL,
	PRIMARY KEY(ID)
	);
	
CREATE TABLE CLIENTES(
	ID INT AUTO_INCREMENT NOT NULL,
	NOMBRE VARCHAR(30) NOT NULL,
	APELLIDO_PATERNO VARCHAR(30) NOT NULL,
	APELLIDO_MATERNO VARCHAR(30) NOT NULL,
	TELEFONO1 VARCHAR(15) NOT NULL,
	TELEFONO2 VARCHAR(15) NOT NULL,
	PRIMARY KEY(ID)
	);
	
CREATE TABLE NIVELES_USUARIO(
	ID INT NOT NULL UNIQUE,
	NOMBRE VARCHAR(255) NOT NULL UNIQUE,
	PRIMARY KEY(ID)
	);

CREATE TABLE USUARIOS(
	ID INT AUTO_INCREMENT NOT NULL,
	NOMBRE VARCHAR(127) NOT NULL UNIQUE,
	CONTRASENIA VARCHAR(511) NOT NULL,
	ID_NIVEL INT NOT NULL,
	ACTIVO BOOLEAN NOT NULL DEFAULT FALSE,
	PRIMARY KEY(ID),
	FOREIGN KEY(ID_NIVEL) REFERENCES NIVELES_USUARIO(ID) ON UPDATE CASCADE ON DELETE RESTRICT
	);		
	
CREATE TABLE PRODUCTOS(
	CLAVE VARCHAR(15) NOT NULL,
	NOMBRE VARCHAR(511) NOT NULL,
	NUEVO BOOLEAN NOT NULL,
	ID_CATEGORIA INT NOT NULL,
	PRECIO FLOAT NOT NULL,
	TALLA VARCHAR(20) NOT NULL,
	DETALLES VARCHAR(511) NOT NULL,
	EXISTENCIA INT NOT NULL DEFAULT 0,
	IMAGEN VARCHAR(511) NOT NULL,
	PRIMARY KEY(CLAVE),
	FOREIGN KEY(ID_CATEGORIA) REFERENCES CATEGORIAS(ID) ON UPDATE CASCADE ON DELETE RESTRICT	
	);	
	
CREATE TABLE VENTAS(
	FOLIO INT AUTO_INCREMENT NOT NULL,
	FECHA DATETIME NOT NULL DEFAULT NOW(),
	ID_USUARIO INT NOT NULL,
	ID_CLIENTE INT NOT NULL,
	FORMA_PAGO VARCHAR(30) NOT NULL,
	CANCELADO BOOLEAN NOT NULL DEFAULT FALSE,
	TOTAL FLOAT NOT NULL,
	PRIMARY KEY(FOLIO),
	FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTES(ID) ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY(ID_USUARIO) REFERENCES USUARIOS(ID) ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY(FORMA_PAGO) REFERENCES FORMAS_DE_PAGO(NOMBRE) ON UPDATE CASCADE ON DELETE RESTRICT
	);	

CREATE TABLE EGRESOS(
	FOLIO INT AUTO_INCREMENT NOT NULL,
	FECHA DATETIME NOT NULL DEFAULT NOW(),
	ID_USUARIO INT NOT NULL,
	TIPO VARCHAR(50) NOT NULL,
	MONTO FLOAT NOT NULL,
	DETALLES VARCHAR(511) NOT NULL,
	CANCELADO BOOLEAN NOT NULL DEFAULT FALSE,
	PRIMARY KEY(FOLIO),
	FOREIGN KEY(ID_USUARIO) REFERENCES USUARIOS(ID) ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY(TIPO) REFERENCES TIPOS_EGRESOS(TIPO) ON UPDATE CASCADE ON DELETE RESTRICT
	);
	
CREATE TABLE INGRESOS(
	FOLIO INT AUTO_INCREMENT NOT NULL,
	FECHA DATETIME NOT NULL DEFAULT NOW(),
	ID_USUARIO INT NOT NULL,
	TIPO VARCHAR(50) NOT NULL,
	MONTO FLOAT NOT NULL,
	DETALLES VARCHAR(511) NOT NULL,
	CANCELADO BOOLEAN NOT NULL DEFAULT FALSE,
	PRIMARY KEY(FOLIO),
	FOREIGN KEY(ID_USUARIO) REFERENCES USUARIOS(ID) ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY(TIPO) REFERENCES TIPOS_INGRESOS(TIPO) ON UPDATE CASCADE ON DELETE RESTRICT
	);
		
CREATE TABLE PAGOS_DE_CONTADO(
	FOLIO_VENTA INT NOT NULL,
	FOLIO_INGRESO INT NOT NULL,
	PRIMARY KEY(FOLIO_VENTA),
	FOREIGN KEY (FOLIO_VENTA) REFERENCES VENTAS(FOLIO) ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY (FOLIO_INGRESO) REFERENCES INGRESOS(FOLIO) ON UPDATE CASCADE ON DELETE RESTRICT
	);	
	
CREATE TABLE VENTAS_PRODUCTOS(
	ID_ASIGNACION INT NOT NULL AUTO_INCREMENT,
	FOLIO_VENTA INT NOT NULL,
	CLAVE_PRODUCTO VARCHAR(15) NOT NULL,
	PRECIO FLOAT NOT NULL,
	PRIMARY KEY(ID_ASIGNACION),
	FOREIGN KEY(FOLIO_VENTA) REFERENCES VENTAS(FOLIO) ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY(CLAVE_PRODUCTO) REFERENCES PRODUCTOS(CLAVE) ON UPDATE CASCADE ON DELETE RESTRICT
	);	

CREATE TABLE APARTADOS(
	FOLIO INT NOT NULL AUTO_INCREMENT,
	ID_ASIGNACION INT NOT NULL,
	ID_CLIENTE INT NOT NULL,
	ENTREGADO BOOLEAN NOT NULL DEFAULT FALSE,
	COSTO FLOAT NOT NULL,
	SALDO_PENDIENTE FLOAT NOT NULL,
	CANCELADO BOOLEAN NOT NULL DEFAULT FALSE,
	PRIMARY KEY(FOLIO),
	FOREIGN KEY(ID_ASIGNACION) REFERENCES VENTAS_PRODUCTOS(ID_ASIGNACION) ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTES(ID) ON UPDATE CASCADE ON DELETE RESTRICT
	);
	
CREATE TABLE ABONOS(
	FOLIO_TICKET INT NOT NULL,
	FOLIO_APARTADO INT NOT NULL,
	PRIMARY KEY(FOLIO_TICKET),
	FOREIGN KEY(FOLIO_TICKET) REFERENCES INGRESOS(FOLIO) ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY(FOLIO_APARTADO) REFERENCES APARTADOS(FOLIO) ON UPDATE CASCADE ON DELETE RESTRICT	
	);	
	
CREATE TABLE COMPRAS(
	FOLIO INT NOT NULL AUTO_INCREMENT,	
	FOLIO_EGRESO INT NOT NULL,
	CANCELADO BOOLEAN NOT NULL DEFAULT FALSE,
	PRIMARY KEY(FOLIO),	
	FOREIGN KEY(FOLIO_EGRESO) REFERENCES EGRESOS(FOLIO) ON UPDATE CASCADE ON DELETE RESTRICT
	);
	
CREATE TABLE COMPRAS_PRODUCTOS(
	FOLIO_COMPRA INT NOT NULL,
	CLAVE_PRODUCTO VARCHAR(15) NOT NULL,
	CANTIDAD INT NOT NULL,
	PRECIO_UNITARIO FLOAT NOT NULL,	
	FOREIGN KEY(FOLIO_COMPRA) REFERENCES COMPRAS(FOLIO) ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY(CLAVE_PRODUCTO) REFERENCES PRODUCTOS(CLAVE) ON UPDATE CASCADE ON DELETE RESTRICT
	);		
	
CREATE TABLE VENTAS_PENDIENTES(
	FOLIO_VENTA INT NOT NULL,
	PRIMARY KEY(FOLIO_VENTA),
	FOREIGN KEY(FOLIO_VENTA) REFERENCES VENTAS(FOLIO) ON UPDATE CASCADE ON DELETE RESTRICT
	);
	
CREATE TABLE CONSULTAS(
	ID INT NOT NULL AUTO_INCREMENT,
	ID_USUARIO INT NOT NULL,
	CLAVE_PRODUCTO VARCHAR(15) NOT NULL,
	FECHA DATETIME DEFAULT NOW(),
	PRIMARY KEY(ID),
	FOREIGN KEY(CLAVE_PRODUCTO) REFERENCES PRODUCTOS(CLAVE) ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY(ID_USUARIO) REFERENCES USUARIOS(ID) ON UPDATE CASCADE ON DELETE RESTRICT
	);

CREATE VIEW ABONOS_APARTADOS AS SELECT FOLIO_APARTADO, FOLIO_TICKET, FECHA, NOMBRE AS USUARIO, MONTO, INGRESOS.CANCELADO
FROM ABONOS JOIN APARTADOS JOIN INGRESOS JOIN USUARIOS 
ON INGRESOS.FOLIO=ABONOS.FOLIO_TICKET AND USUARIOS.ID=INGRESOS.ID_USUARIO AND APARTADOS.FOLIO=ABONOS.FOLIO_APARTADO;

CREATE VIEW APARTADOS_POR_CLIENTE AS SELECT 
	CLIENTES.ID AS ID_CLIENTE, 
	APARTADOS.FOLIO, 
	FOLIO_VENTA, 
	PRODUCTOS.CLAVE AS CLAVE_PRODUCTO,
	PRODUCTOS.NOMBRE, 
	VENTAS_PRODUCTOS.PRECIO, 
	APARTADOS.SALDO_PENDIENTE, 
	APARTADOS.CANCELADO AS CANCELADO,
	APARTADOS.ENTREGADO AS ENTREGADO
FROM APARTADOS JOIN VENTAS_PRODUCTOS JOIN CLIENTES JOIN PRODUCTOS
ON APARTADOS.ID_ASIGNACION=VENTAS_PRODUCTOS.ID_ASIGNACION AND VENTAS_PRODUCTOS.CLAVE_PRODUCTO=PRODUCTOS.CLAVE
	AND APARTADOS.ID_CLIENTE=CLIENTES.ID;
	
CREATE VIEW CLIENTES_CON_FORMATO AS SELECT ID, CONCAT(NOMBRE,' ',APELLIDO_PATERNO,' ',APELLIDO_MATERNO) AS NOMBRE, TELEFONO1, TELEFONO2 FROM CLIENTES;

CREATE VIEW NOMBRE_CLIENTE AS SELECT ID, CONCAT(NOMBRE,' ',APELLIDO_PATERNO,' ',APELLIDO_MATERNO) AS NOMBRE FROM CLIENTES;

CREATE VIEW INVENTARIO AS SELECT CLAVE, PRODUCTOS.NOMBRE AS NOMBRE, NUEVO, CATEGORIAS.NOMBRE AS CATEGORIA, EXISTENCIA 
FROM PRODUCTOS JOIN CATEGORIAS ON PRODUCTOS.ID_CATEGORIA=CATEGORIAS.ID;

CREATE VIEW REPORTE_INGRESOS AS SELECT FOLIO, MONTO, FECHA, NOMBRE as USUARIO, DETALLES, TIPO, CANCELADO, FOLIO_APARTADO, FOLIO_VENTA
FROM INGRESOS JOIN USUARIOS ON INGRESOS.ID_USUARIO=USUARIOS.ID 
LEFT JOIN ABONOS ON ABONOS.FOLIO_TICKET=INGRESOS.FOLIO
LEFT JOIN PAGOS_DE_CONTADO ON INGRESOS.FOLIO=PAGOS_DE_CONTADO.FOLIO_INGRESO;

CREATE VIEW REPORTE_EGRESOS AS SELECT FOLIO, MONTO, FECHA, NOMBRE as USUARIO, DETALLES, TIPO, CANCELADO
FROM EGRESOS JOIN USUARIOS ON EGRESOS.ID_USUARIO=USUARIOS.ID;

CREATE VIEW CONSULTA_PRODUCTO AS SELECT CLAVE, PRODUCTOS.NOMBRE, CATEGORIAS.NOMBRE AS CATEGORIA, PRECIO, EXISTENCIA, IMAGEN 
FROM PRODUCTOS JOIN CATEGORIAS ON ID_CATEGORIA=ID;

CREATE VIEW REPORTE_COMPRAS AS SELECT COMPRAS.FOLIO, FOLIO_EGRESO, USUARIOS.NOMBRE AS USUARIO, FECHA, MONTO AS TOTAL, COMPRAS.CANCELADO
FROM COMPRAS JOIN EGRESOS JOIN USUARIOS ON COMPRAS.FOLIO_EGRESO=EGRESOS.FOLIO AND EGRESOS.ID_USUARIO=USUARIOS.ID;

CREATE VIEW COMPRA_DETALLE AS SELECT FOLIO_COMPRA, CLAVE, NOMBRE, CANTIDAD, PRECIO_UNITARIO, (CANTIDAD * PRECIO_UNITARIO) AS PRECIO_TOTAL 
FROM COMPRAS_PRODUCTOS JOIN PRODUCTOS ON COMPRAS_PRODUCTOS.CLAVE_PRODUCTO=PRODUCTOS.CLAVE;

CREATE VIEW REPORTE_VENTA AS SELECT FOLIO, FECHA, USUARIOS.NOMBRE AS USUARIO, NOMBRE_CLIENTE.NOMBRE AS CLIENTE, FORMA_PAGO, TOTAL, VENTAS.CANCELADO
FROM VENTAS LEFT JOIN VENTAS_PENDIENTES ON VENTAS.FOLIO=VENTAS_PENDIENTES.FOLIO_VENTA
JOIN USUARIOS ON VENTAS.ID_USUARIO=USUARIOS.ID
JOIN NOMBRE_CLIENTE ON NOMBRE_CLIENTE.ID=VENTAS.ID_CLIENTE
WHERE VENTAS_PENDIENTES.FOLIO_VENTA IS NULL;

CREATE VIEW DETALLE_VENTA AS SELECT FOLIO_VENTA, ID_ASIGNACION AS ASIGNACION, CLAVE, NOMBRE, VENTAS_PRODUCTOS.PRECIO AS PRECIO
FROM VENTAS_PRODUCTOS JOIN PRODUCTOS ON VENTAS_PRODUCTOS.CLAVE_PRODUCTO = PRODUCTOS.CLAVE;

CREATE VIEW BUSCAR_POR_SUBFOLIO AS SELECT ID_CLIENTE, ID_ASIGNACION AS SUBFOLIO, FOLIO FROM APARTADOS;

CREATE VIEW DETALLES_PRODUCTOS AS SELECT CLAVE, PRODUCTOS.NOMBRE AS NOMBRE, NUEVO, CATEGORIAS.NOMBRE AS CATEGORIA, PRECIO, DETALLES, IMAGEN
FROM PRODUCTOS JOIN CATEGORIAS ON PRODUCTOS.ID_CATEGORIA=CATEGORIAS.ID;

CREATE VIEW NIVEL_DE_USUARIO AS SELECT USUARIOS.ID AS ID_USUARIO, USUARIOS.NOMBRE, NIVELES_USUARIO.ID AS ID_NIVEL, NIVELES_USUARIO.NOMBRE AS NIVEL 
FROM USUARIOS JOIN NIVELES_USUARIO ON USUARIOS.ID_NIVEL=NIVELES_USUARIO.ID; 

CREATE VIEW PRODUCTOS_PARA_VENTA AS SELECT CLAVE, NOMBRE, PRECIO FROM PRODUCTOS;

CREATE VIEW SUMA_EGRESOS AS SELECT FECHA, SUM(MONTO) AS MONTO FROM EGRESOS GROUP BY FECHA;

CREATE VIEW SUMA_INGRESOS AS SELECT FECHA, SUM(MONTO) AS MONTO FROM INGRESOS GROUP BY FECHA;

CREATE VIEW CORTE_CAJA AS SELECT 
	APERTURAS_DE_CAJA.FECHA AS FECHA, 
	APERTURAS_DE_CAJA.MONTO AS APERTURA, 
	IF(ISNULL(INGRESOS.MONTO), 0, INGRESOS.MONTO) AS INGRESOS, 
	IF(ISNULL(EGRESOS.MONTO), 0, EGRESOS.MONTO) AS EGRESOS,
	(APERTURAS_DE_CAJA.MONTO 
		+ IF(ISNULL(INGRESOS.MONTO), 0, INGRESOS.MONTO) 
		- IF(ISNULL(EGRESOS.MONTO), 0, EGRESOS.MONTO)) AS CIERRE
FROM (SELECT FECHA, SUM(INGRESOS.MONTO) AS MONTO FROM INGRESOS WHERE CANCELADO=FALSE GROUP BY DATE(FECHA)) AS INGRESOS
RIGHT JOIN APERTURAS_DE_CAJA ON APERTURAS_DE_CAJA.FECHA=DATE(INGRESOS.FECHA)
LEFT JOIN (SELECT FECHA, SUM(EGRESOS.MONTO) AS MONTO FROM EGRESOS WHERE CANCELADO=FALSE GROUP BY DATE(FECHA)) AS EGRESOS ON DATE(INGRESOS.FECHA)=DATE(EGRESOS.FECHA);


CREATE VIEW REPORTE_CONSULTAS AS SELECT CONSULTAS.ID, CONSULTAS.FECHA AS FECHA, PRODUCTOS.NOMBRE AS NOMBRE, USUARIOS.NOMBRE AS USUARIO FROM CONSULTAS 
JOIN PRODUCTOS ON PRODUCTOS.CLAVE=CONSULTAS.CLAVE_PRODUCTO
JOIN USUARIOS ON USUARIOS.ID=CONSULTAS.ID_USUARIO;

CREATE VIEW DETALLES_VENTAS_PENDIENTES AS SELECT VENTAS_PENDIENTES.FOLIO_VENTA AS FOLIO, NOMBRE_CLIENTE.ID AS ID_CLIENTE, NOMBRE_CLIENTE.NOMBRE AS CLIENTE FROM VENTAS_PENDIENTES
JOIN VENTAS ON VENTAS_PENDIENTES.FOLIO_VENTA=VENTAS.FOLIO
JOIN NOMBRE_CLIENTE ON NOMBRE_CLIENTE.ID=VENTAS.ID_CLIENTE;


