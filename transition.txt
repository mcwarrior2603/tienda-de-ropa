CREATE TABLE APARTADOS_ASIGNACIONES(
	FOLIO_APARTADO INT NOT NULL,
	ID_ASIGNACION INT NOT NULL,
	PRIMARY KEY(FOLIO_APARTADO, ID_ASIGNACION),
	FOREIGN KEY(FOLIO_APARTADO) REFERENCES APARTADOS(FOLIO) ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY(ID_ASIGNACION) REFERENCES VENTAS_PRODUCTOS(ID_ASIGNACION) ON UPDATE CASCADE ON DELETE RESTRICT
);

INSERT INTO APARTADOS_ASIGNACIONES(FOLIO_APARTADO, ID_ASIGNACION) 
(SELECT FOLIO, ID_ASIGNACION FROM APARTADOS);

alter table apartados drop foreign key apartados_ibfk_1;

alter table apartados drop column id_asignacion;

alter table apartados drop column costo;

ALTER TABLE APARTADOS ADD COLUMN TOTAL FLOAT NOT NULL;

drop view apartados_por_cliente;

CREATE VIEW APARTADOS_POR_CLIENTE AS SELECT 
	CLIENTES.ID AS ID_CLIENTE, 
	APARTADOS.FOLIO, 
	FOLIO_VENTA, 		
	APARTADOS.TOTAL,
	APARTADOS.SALDO_PENDIENTE, 
	APARTADOS.CANCELADO AS CANCELADO,
	APARTADOS.ENTREGADO AS ENTREGADO
FROM APARTADOS JOIN CLIENTES JOIN VENTAS JOIN APARTADOS_ASIGNACIONES JOIN VENTAS_PRODUCTOS 
ON CLIENTES.ID=APARTADOS.ID_CLIENTE AND APARTADOS.FOLIO=APARTADOS_ASIGNACIONES.FOLIO_APARTADO 
	AND APARTADOS_ASIGNACIONES.ID_ASIGNACION=VENTAS_PRODUCTOS.ID_ASIGNACION AND VENTAS.FOLIO=VENTAS_PRODUCTOS.FOLIO_VENTA
GROUP BY APARTADOS.FOLIO;

DROP VIEW BUSCAR_POR_SUBFOLIO;

CREATE VIEW BUSCAR_POR_SUBFOLIO AS SELECT ID_CLIENTE, ID_ASIGNACION AS SUBFOLIO, FOLIO 
FROM APARTADOS JOIN APARTADOS_ASIGNACIONES 
ON APARTADOS.FOLIO = APARTADOS_ASIGNACIONES.FOLIO_APARTADO;

CREATE VIEW DETALLES_APARTADOS AS SELECT 
	APARTADOS.FOLIO,
	PRODUCTOS.NOMBRE,
	VENTAS_PRODUCTOS.PRECIO
	FROM APARTADOS JOIN APARTADOS_ASIGNACIONES JOIN VENTAS_PRODUCTOS JOIN PRODUCTOS
	ON APARTADOS.FOLIO = APARTADOS_ASIGNACIONES.FOLIO_APARTADO AND APARTADOS_ASIGNACIONES.ID_ASIGNACION = VENTAS_PRODUCTOS.ID_ASIGNACION
		AND VENTAS_PRODUCTOS.CLAVE_PRODUCTO = PRODUCTOS.CLAVE;